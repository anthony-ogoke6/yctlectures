# Generated by Django 2.1 on 2020-11-25 03:50

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='NamesOfPeopleWhoHaveOwnedShops',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200)),
                ('status', models.CharField(choices=[('', '---------'), ('draft', 'Draft'), ('published', 'Published')], max_length=10)),
                ('amount', models.PositiveIntegerField(default='')),
                ('category', models.CharField(choices=[('', '---------'), ('Agriculture & Food', 'Agriculture & Food'), ('Animals & Pets', 'Animals & Pets'), ('Babies & Kids', 'Babies & Kids'), ('Commercial Equipment & Tool', 'Commercial Equipment & Tool'), ('Electronics', 'Electronics'), ('Fashion', 'Fashion'), ('Health & Beauty', 'Health & Beauty'), ('Home, Furniture & Appliances', 'Home, Furniture & Appliances'), ('Mobile Phones & Tablets', 'Mobile Phones & Tablets'), ('Property', 'Property'), ('Repair & Construction', 'Repair & Construction'), ('Seeking Work - CVs', 'Seeking Work - CVs'), ('Services', 'Services'), ('Sport, Art & Outdoors', 'Sport, Art & Outdoors'), ('Vehicles', 'Vehicles')], max_length=100)),
                ('description', models.TextField()),
                ('video', models.FileField(blank=True, null=True, upload_to='')),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('bodysnippet', models.TextField(blank=True, default='', null=True)),
                ('body', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='', null=True)),
                ('link', models.TextField(blank=True, null=True)),
                ('image2', models.ImageField(blank=True, null=True, upload_to='')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='')),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('duration', models.PositiveIntegerField(blank=True, choices=[('', '---------'), (7, '1 Week'), (14, '2 Weeks'), (28, '3 Weeks'), (31, '1 Month'), (366, '1 Year')], null=True)),
                ('available', models.BooleanField(default=True)),
                ('stock', models.PositiveIntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Shops',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('storename', models.CharField(max_length=200)),
                ('description', models.TextField(default='')),
                ('status', models.CharField(choices=[('', '---------'), ('draft', 'Draft'), ('published', 'Published')], max_length=10)),
                ('slug', models.SlugField(max_length=200)),
                ('category', models.CharField(choices=[('', '---------'), ('Agriculture & Food', 'Agriculture & Food'), ('Animals & Pets', 'Animals & Pets'), ('Babies & Kids', 'Babies & Kids'), ('Commercial Equipment & Tool', 'Commercial Equipment & Tool'), ('Electronics', 'Electronics'), ('Fashion', 'Fashion'), ('Health & Beauty', 'Health & Beauty'), ('Home, Furniture & Appliances', 'Home, Furniture & Appliances'), ('Mobile Phones & Tablets', 'Mobile Phones & Tablets'), ('Property', 'Property'), ('Repair & Construction', 'Repair & Construction'), ('Seeking Work - CVs', 'Seeking Work - CVs'), ('Services', 'Services'), ('Sport, Art & Outdoors', 'Sport, Art & Outdoors'), ('Vehicles', 'Vehicles')], max_length=100)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='')),
                ('available', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('duration', models.PositiveIntegerField(blank=True, choices=[('', '---------'), (31, '1 Month'), (186, '6 Months'), (366, '1 Year')], null=True)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='shop_owner_name', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Stores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('storename', models.CharField(max_length=200)),
                ('description', models.TextField(default='')),
                ('status', models.CharField(choices=[('', '---------'), ('draft', 'Draft'), ('published', 'Published')], max_length=10)),
                ('slug', models.SlugField(max_length=200)),
                ('category', models.CharField(choices=[('', '---------'), ('Agriculture & Food', 'Agriculture & Food'), ('Animals & Pets', 'Animals & Pets'), ('Babies & Kids', 'Babies & Kids'), ('Commercial Equipment & Tool', 'Commercial Equipment & Tool'), ('Electronics', 'Electronics'), ('Fashion', 'Fashion'), ('Health & Beauty', 'Health & Beauty'), ('Home, Furniture & Appliances', 'Home, Furniture & Appliances'), ('Mobile Phones & Tablets', 'Mobile Phones & Tablets'), ('Property', 'Property'), ('Repair & Construction', 'Repair & Construction'), ('Seeking Work - CVs', 'Seeking Work - CVs'), ('Services', 'Services'), ('Sport, Art & Outdoors', 'Sport, Art & Outdoors'), ('Vehicles', 'Vehicles')], max_length=100)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='')),
                ('available', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('duration', models.PositiveIntegerField(blank=True, choices=[('', '---------'), (31, '1 Month'), (186, '6 Months'), (366, '1 Year')], null=True)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='store_owner_name', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='store',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='product_in_store', to='shops.Stores'),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
